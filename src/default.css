*{margin: 0;padding: 0;}
*{box-sizing: border-box;}
*::after{box-sizing: border-box;}
*::before{box-sizing: border-box;}
ul,ol{list-style: none;}
a{color: inherit;text-decoration: none}
/* 对于按标签设置其颜色为隐藏的颜色，父元素什么颜色，a标签就是什么颜色，并且不要下划线*/
body{
    font-size: 12px;
    line-height: 1.5;

}


/* layout */

.page{
    display: flex;
    height: 100vh;
    /* 一个元素的高度就是内部文档流的高度，这里设置的高度为视口高度 */
}
.page > aside{
    width: 200px;
    border: 1px solid red;
    display: flex;
    flex-direction: column;
}
.page > main{
    flex-grow: 1;
    border: 1px solid green;
}

/* aside */
.page aside > .newSong{
    text-align: center;
    padding: 10px;
}
.page aside > .newSong.active{
    background: #4d4b4b4d;
}
.page aside .songList{
    flex-grow: 1;
    /* 加上上面一句就能实现songList自动的向两边延伸，延伸后的话，歌单和长传区域就能分开了。 */
    text-align: left;
    border-top: 1px solid rgb(103, 105, 107);
}
.page aside .songList div > li{
    padding: 10px;
    border-bottom: 1px solid #ddd;
    margin-left: 10px;
    margin-right: 10px;
}
.page aside .songList > div.active{
    background: #4d4b4b4d;
}
.page aside .uploadArea{

}
.draggable {
    text-align: center;
    border-radius: 4px;
    border: 2px dashed #ddd;
    display: flex;
    align-items: center;
    justify-content: center;
    /* width: 200px; */
    flex-direction: column;
}
.clickable{
    cursor: pointer;
    /* 加上这一句就能实现鼠标变为手 */
    /* width: 100%; */
    /* 宽度与父元素的宽度一样 */
    padding: 20px 20px;
    /* 这里的padding撑起了父元素的高度,所以这里的按钮宽度和拖拽区域宽高都被子元素的padding撑起来了 */
}